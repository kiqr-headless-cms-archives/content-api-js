/* tslint:disable */
/* eslint-disable */
/**
 * Content API
 * Content API for KIQR Headless CMS
 *
 * The version of the OpenAPI document: 0.16.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DocumentsCollection,
} from '../models';
import {
    DocumentsCollectionFromJSON,
    DocumentsCollectionToJSON,
} from '../models';

export interface GetRelationsRequest {
    contentTypeId: string;
    documentId: string;
    fieldId: string;
}

/**
 * RelationshipsApi - interface
 * 
 * @export
 * @interface RelationshipsApiInterface
 */
export interface RelationshipsApiInterface {
    /**
     * 
     * @summary Returns a list of related documents
     * @param {string} contentTypeId 
     * @param {string} documentId 
     * @param {string} fieldId 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RelationshipsApiInterface
     */
    getRelationsRaw(requestParameters: GetRelationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DocumentsCollection>>;

    /**
     * Returns a list of related documents
     */
    getRelations(requestParameters: GetRelationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DocumentsCollection>;

}

/**
 * 
 */
export class RelationshipsApi extends runtime.BaseAPI implements RelationshipsApiInterface {

    /**
     * Returns a list of related documents
     */
    async getRelationsRaw(requestParameters: GetRelationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DocumentsCollection>> {
        if (requestParameters.contentTypeId === null || requestParameters.contentTypeId === undefined) {
            throw new runtime.RequiredError('contentTypeId','Required parameter requestParameters.contentTypeId was null or undefined when calling getRelations.');
        }

        if (requestParameters.documentId === null || requestParameters.documentId === undefined) {
            throw new runtime.RequiredError('documentId','Required parameter requestParameters.documentId was null or undefined when calling getRelations.');
        }

        if (requestParameters.fieldId === null || requestParameters.fieldId === undefined) {
            throw new runtime.RequiredError('fieldId','Required parameter requestParameters.fieldId was null or undefined when calling getRelations.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["environmentId"] = this.configuration.apiKey("environmentId"); // environmentId authentication
        }

        const response = await this.request({
            path: `/{contentTypeId}/{documentId}/relations/{fieldId}`.replace(`{${"contentTypeId"}}`, encodeURIComponent(String(requestParameters.contentTypeId))).replace(`{${"documentId"}}`, encodeURIComponent(String(requestParameters.documentId))).replace(`{${"fieldId"}}`, encodeURIComponent(String(requestParameters.fieldId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DocumentsCollectionFromJSON(jsonValue));
    }

    /**
     * Returns a list of related documents
     */
    async getRelations(requestParameters: GetRelationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DocumentsCollection> {
        const response = await this.getRelationsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
